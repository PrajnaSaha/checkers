void game::computerTurnminMAXAB()
{
    currentB->printMoves();
    cout << "The computer will make a move." << endl;
      
    if (currentB->mlist.size() == 1)
    {
        bestM = currentB->mlist.front();
        time(&startTime);
        time(&endTime);
        cdepth = 0;
    }
    else
    { 
        time(&startTime);
        for (int i = 1; i != maxIterDepth; ++i)
        {
            time(&startTimeD);   
            maxdepth = i;  
            minMAXAB(currentB, i, std::numeric_limits<int>::min(), std::numeric_limits<int>::max());
            time(&endTimeD);
            
            if (difftime(endTimeD, startTimeD) >= ((board::timeLimit)/2))
            {
                time(&endTime);
                timeUp = true;
                break;
            }      
            if (timeUp)
                break;
            else
                bestM = tempBestM;
            
            if (reachedEnd)
                break;
        }
    }
    assert(bestM != NULL);  
    outputMessage();
}
